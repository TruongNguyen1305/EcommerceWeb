@using PagedList.Core
@model PagedList.Core.IPagedList<Order>

@{
    int currentPage = ViewBag.CurrentPage;
    ViewData["Title"] = "Admin order list page " + currentPage;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<h1 id="header" data="@currentPage">@ViewData["Title"]</h1>

@if (User.Identity.IsAuthenticated)
{
    if (User.Claims.FirstOrDefault(x => x.Type == "Role").Value == "Admin")
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
}

<div class="container">
    <div class="row">
        <div class="col-md-2">
            <select id="TransactStatusId" name="TransactStatusId" class="btn btn-primary" asp-items="ViewBag.TransactStatus">
                <option value="" disabled selected>Choose TransactStatus</option>
                <option value="0">All</option>
            </select>
        </div>
    </div>
</div>
<table class="table table-responsive">
    <thead>
        <tr>
            <th>
                Order date
            </th>
            <th>
                Ship date
            </th>
            <th>
                Paid
            </th>
            <th>
                Deleted
            </th>
            <th>
                Payment date
            </th>
            <th>
                Customer
            </th>
            <th>
                TransactStatus
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Paid)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deleted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PaymentDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.CustomerId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TransactStatus.Status)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.OrderId">Details</a>
                    @if (User.Identity.IsAuthenticated)
                    {
                        if (User.Claims.FirstOrDefault(x => x.Type == "Role").Value == "Admin")
                        {
                            <a class="btn btn-success" asp-action="Edit" asp-route-id="@item.OrderId">Edit</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row">
    <div class="col-md-12">
        <div class="product-pagination text-center">
            <nav>
                <ul class="pagination">
                    <li style="width: 80px; padding : 20px">
                        <a asp-area="Admin" asp-controller="AdminOrders" asp-action="Index" asp-route-TransactStatusID=@ViewBag.TransactStatusID asp-route-page=@(ViewBag.CurrentPage-1) aria-label="Previous">
                            Previous
                        </a>
                    </li>
                    <li style="width: 80px; padding : 20px">
                        <a asp-area="Admin" asp-controller="AdminOrders" asp-action="Index" asp-route-TransactStatusID=@ViewBag.TransactStatusID asp-route-page=@(ViewBag.CurrentPage+1) aria-label="Next">
                            Next
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
            $("#TransactStatusId").change(function () {
                var transactStatusId = $(this).children(":selected").attr("value");
                transactStatusId = parseInt(transactStatusId);
                $("#TransactStatusId option").removeAttr("selected");
                $(`#TransactStatusId > [value="${transactStatusId}"]`).attr("selected", "true");
                $.ajax({
                    url: "/Admin/AdminOrders/Filter",
                    method: "GET",
                    dataType: "json",
                    data: {
                        TransactStatusId: transactStatusId
                    },
                    async: true,
                    success: function (res) {
                        if (res.status == 'success') {
                            window.location.href = res.redirectUrl;
                        }
                    },
                    error: function () {
                        alert("Some thing went wrong !!!");
                    }
                })
            });
        });
    </script>
}